{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport function getBoxShadow(placement, color) {\n  if (!color) return undefined;\n\n  if (placement.includes(\"top\")) {\n    return \"2px 2px 2px 0 \" + color;\n  }\n\n  if (placement.includes(\"bottom\")) {\n    return \"-1px -1px 1px 0 \" + color;\n  }\n\n  if (placement.includes(\"right\")) {\n    return \"-1px 1px 1px 0 \" + color;\n  }\n\n  if (placement.includes(\"left\")) {\n    return \"1px -1px 1px 0 \" + color;\n  }\n\n  return undefined;\n}\nvar transformEnum = {\n  top: \"bottom center\",\n  \"top-start\": \"bottom left\",\n  \"top-end\": \"bottom right\",\n  bottom: \"top center\",\n  \"bottom-start\": \"top left\",\n  \"bottom-end\": \"top right\",\n  left: \"right center\",\n  \"left-start\": \"right top\",\n  \"left-end\": \"right bottom\",\n  right: \"left center\",\n  \"right-start\": \"left top\",\n  \"right-end\": \"left bottom\"\n};\nexport var toTransformOrigin = function toTransformOrigin(placement) {\n  return transformEnum[placement];\n};\nexport var getArrowStyles = function getArrowStyles(options) {\n  var arrowSize = options.arrowSize,\n      _options$popperArrowS = options.popperArrowStyles,\n      popperArrowStyles = _options$popperArrowS === void 0 ? {} : _options$popperArrowS,\n      placement = options.placement;\n\n  var styles = _extends({}, popperArrowStyles, {\n    width: arrowSize,\n    height: arrowSize,\n    zIndex: -1\n  });\n\n  var offsetAdjust = -(arrowSize / 2);\n  if (placement.startsWith(\"top\")) styles.bottom = offsetAdjust;\n  if (placement.startsWith(\"bottom\")) styles.top = offsetAdjust;\n  if (placement.startsWith(\"left\")) styles.right = offsetAdjust;\n  if (placement.startsWith(\"right\")) styles.left = offsetAdjust;\n  return styles;\n};","map":null,"metadata":{},"sourceType":"module"}