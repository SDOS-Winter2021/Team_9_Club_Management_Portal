{"ast":null,"code":"export function getOwnerWindow(node) {\n  var _getOwnerDocument$def;\n\n  return node instanceof Element ? (_getOwnerDocument$def = getOwnerDocument(node).defaultView) != null ? _getOwnerDocument$def : window : window;\n}\nexport function getOwnerDocument(node) {\n  var _node$ownerDocument;\n\n  return node instanceof Element ? (_node$ownerDocument = node.ownerDocument) != null ? _node$ownerDocument : document : document;\n}\nexport function canUseDOM() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nexport var isBrowser = canUseDOM();\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\n\nexport function normalizeEventKey(event) {\n  var key = event.key,\n      keyCode = event.keyCode;\n  var isArrowKey = keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0;\n  var eventKey = isArrowKey ? \"Arrow\" + key : key;\n  return eventKey;\n}\nexport var dataAttr = function dataAttr(condition) {\n  return condition ? \"\" : undefined;\n};\nexport var ariaAttr = function ariaAttr(condition) {\n  return condition ? true : undefined;\n};\nexport var cx = function cx() {\n  for (var _len = arguments.length, classNames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classNames[_key] = arguments[_key];\n  }\n\n  return classNames.filter(Boolean).join(\" \");\n};\nexport function getActiveElement(node) {\n  var doc = getOwnerDocument(node);\n  return doc == null ? void 0 : doc.activeElement;\n}\nexport function contains(parent, child) {\n  return parent === child || parent.contains(child);\n}","map":null,"metadata":{},"sourceType":"module"}