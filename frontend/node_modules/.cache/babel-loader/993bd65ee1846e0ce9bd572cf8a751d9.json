{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra } from \"@chakra-ui/system\";\nimport { __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var ControlBox = function ControlBox(props) {\n  var _props$type = props.type,\n      type = _props$type === void 0 ? \"checkbox\" : _props$type,\n      _hover = props._hover,\n      _invalid = props._invalid,\n      _disabled = props._disabled,\n      _focus = props._focus,\n      _checked = props._checked,\n      _props$_child = props._child,\n      _child = _props$_child === void 0 ? {\n    opacity: 0\n  } : _props$_child,\n      _props$_checkedAndChi = props._checkedAndChild,\n      _checkedAndChild = _props$_checkedAndChi === void 0 ? {\n    opacity: 1\n  } : _props$_checkedAndChi,\n      _checkedAndDisabled = props._checkedAndDisabled,\n      _checkedAndFocus = props._checkedAndFocus,\n      _checkedAndHover = props._checkedAndHover,\n      children = props.children,\n      rest = _objectWithoutPropertiesLoose(props, [\"type\", \"_hover\", \"_invalid\", \"_disabled\", \"_focus\", \"_checked\", \"_child\", \"_checkedAndChild\", \"_checkedAndDisabled\", \"_checkedAndFocus\", \"_checkedAndHover\", \"children\"]);\n\n  var checkedAndDisabled = \"input[type=\" + type + \"]:checked:disabled + &\";\n  var checkedAndHover = \"input[type=\" + type + \"]:checked:hover:not(:disabled) + &\";\n  var checkedAndFocus = \"input[type=\" + type + \"]:checked:focus + &\";\n  var disabled = \"input[type=\" + type + \"]:disabled + &\";\n  var focus = \"input[type=\" + type + \"]:focus + &\";\n  var hover = \"input[type=\" + type + \"]:hover:not(:disabled):not(:checked) + &\";\n  var checked = \"input[type=\" + type + \"]:checked + &, input[type=\" + type + \"][aria-checked=mixed] + &\";\n  var invalid = \"input[type=\" + type + \"][aria-invalid=true] + &\";\n  var child = \"& > *\";\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({}, rest, {\n    \"aria-hidden\": true,\n    __css: {\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      transition: \"all 120ms\",\n      flexShrink: 0,\n      [focus]: _focus,\n      [hover]: _hover,\n      [disabled]: _disabled,\n      [invalid]: _invalid,\n      [checkedAndDisabled]: _checkedAndDisabled,\n      [checkedAndFocus]: _checkedAndFocus,\n      [checkedAndHover]: _checkedAndHover,\n      [child]: _child,\n      [checked]: _extends({}, _checked, {\n        [child]: _checkedAndChild\n      })\n    }\n  }), children);\n};\n\nif (__DEV__) {\n  ControlBox.displayName = \"ControlBox\";\n}\n\nexport default ControlBox;","map":{"version":3,"sources":["../../src/control-box.tsx"],"names":["ControlBox","props","type","_child","opacity","_checkedAndChild","children","checkedAndDisabled","checkedAndHover","checkedAndFocus","disabled","focus","hover","checked","invalid","child","display","alignItems","justifyContent","transition","flexShrink"],"mappings":"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","sourcesContent":["import { chakra, SystemStyleObject, HTMLChakraProps } from \"@chakra-ui/system\"\nimport { __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface ControlBoxOptions {\n  type?: \"checkbox\" | \"radio\"\n  _hover?: SystemStyleObject\n  _invalid?: SystemStyleObject\n  _disabled?: SystemStyleObject\n  _focus?: SystemStyleObject\n  _checked?: SystemStyleObject\n  _child?: SystemStyleObject\n  _checkedAndChild?: SystemStyleObject\n  _checkedAndDisabled?: SystemStyleObject\n  _checkedAndFocus?: SystemStyleObject\n  _checkedAndHover?: SystemStyleObject\n}\n\nexport type IControlBox = ControlBoxOptions\n\ninterface BaseControlProps\n  extends Omit<HTMLChakraProps<\"div\">, keyof ControlBoxOptions> {}\n\nexport interface ControlBoxProps extends BaseControlProps, ControlBoxOptions {}\n\nexport const ControlBox: React.FC<ControlBoxProps> = (props) => {\n  const {\n    type = \"checkbox\",\n    _hover,\n    _invalid,\n    _disabled,\n    _focus,\n    _checked,\n    _child = { opacity: 0 },\n    _checkedAndChild = { opacity: 1 },\n    _checkedAndDisabled,\n    _checkedAndFocus,\n    _checkedAndHover,\n    children,\n    ...rest\n  } = props\n\n  const checkedAndDisabled = `input[type=${type}]:checked:disabled + &`\n  const checkedAndHover = `input[type=${type}]:checked:hover:not(:disabled) + &`\n  const checkedAndFocus = `input[type=${type}]:checked:focus + &`\n  const disabled = `input[type=${type}]:disabled + &`\n  const focus = `input[type=${type}]:focus + &`\n  const hover = `input[type=${type}]:hover:not(:disabled):not(:checked) + &`\n  const checked = `input[type=${type}]:checked + &, input[type=${type}][aria-checked=mixed] + &`\n  const invalid = `input[type=${type}][aria-invalid=true] + &`\n  const child = `& > *`\n\n  return (\n    <chakra.div\n      {...rest}\n      aria-hidden\n      __css={{\n        display: \"inline-flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        transition: \"all 120ms\",\n        flexShrink: 0,\n        [focus]: _focus,\n        [hover]: _hover,\n        [disabled]: _disabled,\n        [invalid]: _invalid,\n        [checkedAndDisabled]: _checkedAndDisabled,\n        [checkedAndFocus]: _checkedAndFocus,\n        [checkedAndHover]: _checkedAndHover,\n        [child]: _child,\n        [checked]: {\n          ..._checked,\n          [child]: _checkedAndChild,\n        },\n      }}\n    >\n      {children}\n    </chakra.div>\n  )\n}\n\nif (__DEV__) {\n  ControlBox.displayName = \"ControlBox\"\n}\n\nexport default ControlBox\n"]},"metadata":{},"sourceType":"module"}