{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mode } from \"@chakra-ui/theme-tools\";\nimport { mergeWith as merge } from \"@chakra-ui/utils\";\nimport Input from \"./input\";\nvar parts = [\"field\", \"icon\"];\n\nfunction baseStyleField(props) {\n  return _extends({}, Input.baseStyle.field, {\n    appearance: \"none\",\n    paddingBottom: \"1px\",\n    lineHeight: \"normal\",\n    \"> option, > optgroup\": {\n      bg: mode(\"white\", \"gray.700\")(props)\n    }\n  });\n}\n\nvar baseStyleIcon = {\n  width: \"1.5rem\",\n  height: \"100%\",\n  right: \"0.5rem\",\n  position: \"relative\",\n  color: \"currentColor\",\n  fontSize: \"1.25rem\",\n  _disabled: {\n    opacity: 0.5\n  }\n};\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    field: baseStyleField(props),\n    icon: baseStyleIcon\n  };\n};\n\nvar sizes = merge({}, Input.sizes, {\n  xs: {\n    icon: {\n      right: \"0.25rem\"\n    }\n  }\n});\nexport default {\n  parts: parts,\n  baseStyle: baseStyle,\n  sizes: sizes,\n  variants: Input.variants,\n  defaultProps: Input.defaultProps\n};","map":null,"metadata":{},"sourceType":"module"}