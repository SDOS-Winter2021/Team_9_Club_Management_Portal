{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, mergeWith, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\nvar transitions = {\n  enter: {\n    duration: 0.2,\n    ease: EASINGS.easeOut\n  },\n  exit: {\n    duration: 0.1,\n    ease: EASINGS.easeIn\n  }\n};\nvar variants = {\n  initial: function initial(props) {\n    return {\n      opacity: 0,\n      x: props.offsetX,\n      y: props.offsetY,\n      transition: transitions.exit\n    };\n  },\n  exit: function exit(props) {\n    return _extends({\n      opacity: 0,\n      transition: transitions.exit\n    }, props.reverse && {\n      x: props.offsetX,\n      y: props.offsetY\n    }, !props.reverse && {\n      transitionEnd: {\n        x: props.offsetX,\n        y: props.offsetY\n      }\n    });\n  },\n  enter: {\n    opacity: 1,\n    x: 0,\n    y: 0,\n    transition: transitions.enter\n  }\n};\nexport var slideFadeConfig = {\n  initial: \"initial\",\n  animate: \"enter\",\n  exit: \"exit\",\n  variants: variants\n};\nexport var SlideFade = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var unmountOnExit = props.unmountOnExit,\n      isOpen = props.in,\n      _props$reverse = props.reverse,\n      reverse = _props$reverse === void 0 ? true : _props$reverse,\n      className = props.className,\n      _props$offsetX = props.offsetX,\n      offsetX = _props$offsetX === void 0 ? 0 : _props$offsetX,\n      _props$offsetY = props.offsetY,\n      offsetY = _props$offsetY === void 0 ? 8 : _props$offsetY,\n      rest = _objectWithoutPropertiesLoose(props, [\"unmountOnExit\", \"in\", \"reverse\", \"className\", \"offsetX\", \"offsetY\"]);\n\n  var shouldExpand = unmountOnExit ? isOpen && unmountOnExit : true;\n  var custom = {\n    offsetX: offsetX,\n    offsetY: offsetY,\n    reverse: reverse\n  };\n  var motionProps = mergeWith(slideFadeConfig, {\n    custom: custom,\n    animate: isOpen || unmountOnExit ? \"enter\" : \"exit\"\n  });\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, shouldExpand && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-offset-slide\", className)\n  }, motionProps, rest)));\n});\n\nif (__DEV__) {\n  SlideFade.displayName = \"SlideFade\";\n}","map":null,"metadata":{},"sourceType":"module"}