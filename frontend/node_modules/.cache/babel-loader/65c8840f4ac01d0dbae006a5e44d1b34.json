{"ast":null,"code":"var _jsxFileName = \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\src\\\\events-page\\\\components\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, ReactNode } from \"react\";\nimport { IoPencil, IoTrashOutline } from \"react-icons/io5\";\nimport Head from \"next/head\";\nimport { ThemeProvider, CSSReset, theme, Box, Image, Badge, Text, Icon, Stack, Avatar, AvatarBadge, Alert, AlertIcon, AlertTitle, AlertDescription, FormLabel, Input, FormHelperText, FormErrorMessage, Grid, Switch, InputGroup, InputRightElement, Flex, Tag, Heading, Container, SimpleGrid, useColorModeValue, StackDivider } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport history from \"../../history\";\nimport { render } from \"react-dom\";\nexport default function Body(event) {\n  _s();\n\n  var _this = this;\n\n  var eventInfo = event.eventid;\n  console.log(eventInfo);\n\n  var Feature = function Feature(_ref) {\n    var text = _ref.text,\n        icon = _ref.icon,\n        iconBg = _ref.iconBg;\n    return /*#__PURE__*/React.createElement(Stack, {\n      direction: \"row\",\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      w: 8,\n      h: 8,\n      align: \"center\",\n      justify: \"center\",\n      rounded: \"full\",\n      bg: iconBg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, icon), /*#__PURE__*/React.createElement(Text, {\n      fontWeight: 600,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, text));\n  };\n\n  var StatsText = function StatsText(_ref2) {\n    var children = _ref2.children;\n    return /*#__PURE__*/React.createElement(Text, {\n      as: \"span\",\n      fontWeight: 700,\n      color: \"white\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, children);\n  };\n\n  var stats = [{\n    title: \"Location\",\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, eventInfo.length !== 0 ? /*#__PURE__*/React.createElement(StatsText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, eventInfo[\"location\"]) : null)\n  }, {\n    title: \"Pre-Reqs\",\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StatsText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"None\"))\n  }, {\n    title: \"Prize Money\",\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, eventInfo.length !== 0 ? /*#__PURE__*/React.createElement(StatsText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, eventInfo[\"id\"]) : null)\n  }, {\n    title: \"Additional Info\",\n    content: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StatsText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"NA\"))\n  }];\n  return /*#__PURE__*/React.createElement(Container, {\n    maxW: '5xl',\n    py: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SimpleGrid, {\n    columns: {\n      base: 1,\n      md: 2\n    },\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    textTransform: 'uppercase',\n    color: 'black',\n    fontWeight: 600,\n    fontSize: 'sm',\n    bgGradient: \"linear(red.300 25%, orange.200 95%)\",\n    p: 2,\n    alignSelf: 'flex-start',\n    rounded: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, \"Event Description\"), /*#__PURE__*/React.createElement(Text, {\n    color: 'gray.500',\n    fontSize: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, eventInfo[\"description\"]), /*#__PURE__*/React.createElement(Text, {\n    textTransform: 'uppercase',\n    color: 'blue.400',\n    fontWeight: 600,\n    fontSize: 'sm',\n    bg: useColorModeValue('blue.50', 'blue.900'),\n    p: 2,\n    alignSelf: 'flex-start',\n    rounded: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, \"Date Time\"), /*#__PURE__*/React.createElement(Text, {\n    color: 'gray.500',\n    fontSize: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, eventInfo[\"date_time\"]), /*#__PURE__*/React.createElement(Text, {\n    textTransform: 'uppercase',\n    color: 'blue.400',\n    fontWeight: 600,\n    fontSize: 'sm',\n    bg: useColorModeValue('blue.50', 'blue.900'),\n    p: 2,\n    alignSelf: 'flex-start',\n    rounded: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Text, {\n    color: 'gray.500',\n    fontSize: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }\n  }, eventInfo[\"location\"]), /*#__PURE__*/React.createElement(Text, {\n    textTransform: 'uppercase',\n    color: 'blue.400',\n    fontWeight: 600,\n    fontSize: 'sm',\n    bg: useColorModeValue('blue.50', 'blue.900'),\n    p: 2,\n    alignSelf: 'flex-start',\n    rounded: 'md',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Prize Money\"), /*#__PURE__*/React.createElement(Text, {\n    color: 'gray.500',\n    fontSize: 'lg',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Add Here\")), /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    rounded: 'md',\n    alt: 'feature image',\n    src: 'https://images.unsplash.com/photo-1554200876-56c2f25224fa?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }))));\n}\n/*\r\n<Box bg={\"gray.800\"} position={\"relative\"}>\r\n      <Container maxW={\"7xl\"} zIndex={10} position={\"relative\"}>\r\n        <Stack direction={{ base: \"row\", lg: \"row\" }}>\r\n          <Stack>\r\n            <Stack direction={{ base: \"column\", lg: \"row\" }}>\r\n              <Stack flex={1} color={\"gray.400\"} justify={{ lg: \"center\" }} py={{ base: 4, md: 20, xl: 5 }} >\r\n                <Box mb={{ base: 8, md: 20 }}>\r\n                  {eventInfo.length !== 0 ? (\r\n                    <Text fontSize={\"xl\"} color={\"white\"}>\r\n                      {eventInfo[\"description\"]}\r\n                    </Text>\r\n                  ) : null}\r\n                </Box>\r\n                <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10}>\r\n                  {stats.map((stat) => (\r\n                    <Box key={stat.title}>\r\n                      <Text fontFamily={\"heading\"} fontSize={\"3xl\"} color={\"white\"} mb={3} >\r\n                        {stat.title}\r\n                      </Text>\r\n                      <Text fontSize={\"xl\"} color={\"gray.400\"}>\r\n                        {stat.content}\r\n                      </Text>\r\n                    </Box>\r\n                  ))}\r\n                </SimpleGrid>\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack paddingLeft=\"500\">\r\n            <Image src=\"https://i.pinimg.com/736x/43/29/c2/4329c2824fec2873b5e0569180e482cf.jpg\" width=\"300px\" height=\"500px\" />\r\n          </Stack>\r\n        </Stack>\r\n        <Flex flex={1} />\r\n        <Text fontSize={\"3xl\"} color={\"white\"} paddingTop=\"100\">\r\n          {\" \"}\r\n          Admin Information\r\n        </Text>\r\n        <Stack direction={{ base: \"row\", lg: \"row\" }}>\r\n          <Stack>\r\n            <Feature mt={10} icon={<Icon as={IoPencil} color={\"purple.500\"} w={5} h={5} />} iconBg={useColorModeValue(\"yellow.100\", \"yellow.900\")} text={\"Edit\"}/>\r\n          </Stack>\r\n          <Stack ml=\"100\">\r\n            <Feature\r\n              mt={10}\r\n              icon={\r\n                <Icon as={IoTrashOutline} color={\"purple.500\"} w={5} h={5} />\r\n              }\r\n              iconBg={useColorModeValue(\"yellow.100\", \"yellow.900\")}\r\n              text={\"Delete\"}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={{ base: \"row\", lg: \"row\" }}>\r\n          <Stack>\r\n            <Text fontSize={\"xl\"} color={\"white\"} paddingTop=\"100\">\r\n              {\" \"}\r\n              Club Receipt\r\n            </Text>\r\n            <Image src=\"https://templates.invoicehome.com/receipt-template-us-band-blue-750px.png\" width=\"300px\" height=\"500px\" />\r\n          </Stack>\r\n          <Stack paddingLeft=\"300\">\r\n            <Text fontSize={\"xl\"} color={\"white\"} paddingTop=\"100\">\r\n              {\" \"}\r\n              Admin Receipt\r\n            </Text>\r\n            <Image src=\"https://templates.invoicehome.com/receipt-template-us-band-blue-750px.png\" width=\"300px\" height=\"500px\" />\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n*/\n\n_s(Body, \"6SPWDKKJx3x6/piDRqtxmfjVGnY=\", false, function () {\n  return [useColorModeValue, useColorModeValue, useColorModeValue];\n});\n\n_c = Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/Team_9_Club_Management_Portal/frontend/src/events-page/components/Body.js"],"names":["React","Component","ReactNode","IoPencil","IoTrashOutline","Head","ThemeProvider","CSSReset","theme","Box","Image","Badge","Text","Icon","Stack","Avatar","AvatarBadge","Alert","AlertIcon","AlertTitle","AlertDescription","FormLabel","Input","FormHelperText","FormErrorMessage","Grid","Switch","InputGroup","InputRightElement","Flex","Tag","Heading","Container","SimpleGrid","useColorModeValue","StackDivider","useState","useEffect","axios","history","render","Body","event","eventInfo","eventid","console","log","Feature","text","icon","iconBg","StatsText","children","stats","title","content","length","base","md"],"mappings":"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","sourcesContent":["import React, { Component, ReactNode } from \"react\";\r\nimport { IoPencil, IoTrashOutline } from \"react-icons/io5\";\r\nimport Head from \"next/head\";\r\nimport {\r\n  ThemeProvider,\r\n  CSSReset,\r\n  theme,\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Text,\r\n  Icon,\r\n  Stack,\r\n  Avatar,\r\n  AvatarBadge,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  FormLabel,\r\n  Input,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Grid,\r\n  Switch,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Flex,\r\n  Tag,\r\n  Heading,\r\n  Container,\r\n  SimpleGrid,\r\n  useColorModeValue,\r\n  StackDivider,\r\n} from \"@chakra-ui/react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport history from \"../../history\";\r\nimport { render } from \"react-dom\";\r\n\r\nexport default function Body(event) {\r\n  const eventInfo = event.eventid;\r\n  console.log(eventInfo);\r\n  const Feature = ({ text, icon, iconBg }: FeatureProps) => {\r\n    return (\r\n      <Stack direction={\"row\"} align={\"center\"}>\r\n        <Flex\r\n          w={8}\r\n          h={8}\r\n          align={\"center\"}\r\n          justify={\"center\"}\r\n          rounded={\"full\"}\r\n          bg={iconBg}\r\n        >\r\n          {icon}\r\n        </Flex>\r\n        <Text fontWeight={600} color=\"white\">\r\n          {text}\r\n        </Text>\r\n      </Stack>\r\n    );\r\n  };\r\n\r\n  const StatsText = ({ children }: { children: ReactNode }) => (\r\n    <Text as={\"span\"} fontWeight={700} color={\"white\"}>\r\n      {children}\r\n    </Text>\r\n  );\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Location\",\r\n      content: (\r\n        <>\r\n          {eventInfo.length !== 0 ? (\r\n            <StatsText>{eventInfo[\"location\"]}</StatsText>\r\n          ) : null}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Pre-Reqs\",\r\n      content: (\r\n        <>\r\n          <StatsText>None</StatsText>\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Prize Money\",\r\n      content: (\r\n        <>\r\n          {eventInfo.length !== 0 ? (\r\n            <StatsText>{eventInfo[\"id\"]}</StatsText>\r\n          ) : null}\r\n        </>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Additional Info\",\r\n      content: (\r\n        <>\r\n          <StatsText>NA</StatsText>\r\n        </>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container maxW={'5xl'} py={12}>\r\n      <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10}>\r\n        <Stack spacing={4}>\r\n          <Text textTransform={'uppercase'} color={'black'} fontWeight={600} fontSize={'sm'} bgGradient=\"linear(red.300 25%, orange.200 95%)\" p={2} alignSelf={'flex-start'} rounded={'md'}> \r\n            Event Description\r\n          </Text>\r\n          <Text color={'gray.500'} fontSize={'lg'}>\r\n            {eventInfo[\"description\"]}\r\n          </Text>\r\n          <Text textTransform={'uppercase'} color={'blue.400'} fontWeight={600} fontSize={'sm'} bg={useColorModeValue('blue.50', 'blue.900')} p={2} alignSelf={'flex-start'} rounded={'md'}> \r\n            Date Time\r\n          </Text>\r\n          <Text color={'gray.500'} fontSize={'lg'}>\r\n            {eventInfo[\"date_time\"]}\r\n          </Text>\r\n          <Text textTransform={'uppercase'} color={'blue.400'} fontWeight={600} fontSize={'sm'} bg={useColorModeValue('blue.50', 'blue.900')} p={2} alignSelf={'flex-start'} rounded={'md'}> \r\n            Location\r\n          </Text>\r\n          <Text color={'gray.500'} fontSize={'lg'}>\r\n            {eventInfo[\"location\"]}\r\n          </Text>\r\n          <Text textTransform={'uppercase'} color={'blue.400'} fontWeight={600} fontSize={'sm'} bg={useColorModeValue('blue.50', 'blue.900')} p={2} alignSelf={'flex-start'} rounded={'md'}> \r\n            Prize Money\r\n          </Text>\r\n          <Text color={'gray.500'} fontSize={'lg'}>\r\n            {\"Add Here\"}\r\n          </Text>\r\n        </Stack>\r\n        <Flex>\r\n          <Image\r\n            rounded={'md'}\r\n            alt={'feature image'}\r\n            src={\r\n              'https://images.unsplash.com/photo-1554200876-56c2f25224fa?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80'\r\n            }\r\n          />\r\n        </Flex>\r\n      </SimpleGrid>\r\n    </Container>\r\n  );\r\n}\r\n/*\r\n<Box bg={\"gray.800\"} position={\"relative\"}>\r\n      <Container maxW={\"7xl\"} zIndex={10} position={\"relative\"}>\r\n        <Stack direction={{ base: \"row\", lg: \"row\" }}>\r\n          <Stack>\r\n            <Stack direction={{ base: \"column\", lg: \"row\" }}>\r\n              <Stack flex={1} color={\"gray.400\"} justify={{ lg: \"center\" }} py={{ base: 4, md: 20, xl: 5 }} >\r\n                <Box mb={{ base: 8, md: 20 }}>\r\n                  {eventInfo.length !== 0 ? (\r\n                    <Text fontSize={\"xl\"} color={\"white\"}>\r\n                      {eventInfo[\"description\"]}\r\n                    </Text>\r\n                  ) : null}\r\n                </Box>\r\n                <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10}>\r\n                  {stats.map((stat) => (\r\n                    <Box key={stat.title}>\r\n                      <Text fontFamily={\"heading\"} fontSize={\"3xl\"} color={\"white\"} mb={3} >\r\n                        {stat.title}\r\n                      </Text>\r\n                      <Text fontSize={\"xl\"} color={\"gray.400\"}>\r\n                        {stat.content}\r\n                      </Text>\r\n                    </Box>\r\n                  ))}\r\n                </SimpleGrid>\r\n              </Stack>\r\n            </Stack>\r\n          </Stack>\r\n          <Stack paddingLeft=\"500\">\r\n            <Image src=\"https://i.pinimg.com/736x/43/29/c2/4329c2824fec2873b5e0569180e482cf.jpg\" width=\"300px\" height=\"500px\" />\r\n          </Stack>\r\n        </Stack>\r\n        <Flex flex={1} />\r\n        <Text fontSize={\"3xl\"} color={\"white\"} paddingTop=\"100\">\r\n          {\" \"}\r\n          Admin Information\r\n        </Text>\r\n        <Stack direction={{ base: \"row\", lg: \"row\" }}>\r\n          <Stack>\r\n            <Feature mt={10} icon={<Icon as={IoPencil} color={\"purple.500\"} w={5} h={5} />} iconBg={useColorModeValue(\"yellow.100\", \"yellow.900\")} text={\"Edit\"}/>\r\n          </Stack>\r\n          <Stack ml=\"100\">\r\n            <Feature\r\n              mt={10}\r\n              icon={\r\n                <Icon as={IoTrashOutline} color={\"purple.500\"} w={5} h={5} />\r\n              }\r\n              iconBg={useColorModeValue(\"yellow.100\", \"yellow.900\")}\r\n              text={\"Delete\"}\r\n            />\r\n          </Stack>\r\n        </Stack>\r\n        <Stack direction={{ base: \"row\", lg: \"row\" }}>\r\n          <Stack>\r\n            <Text fontSize={\"xl\"} color={\"white\"} paddingTop=\"100\">\r\n              {\" \"}\r\n              Club Receipt\r\n            </Text>\r\n            <Image src=\"https://templates.invoicehome.com/receipt-template-us-band-blue-750px.png\" width=\"300px\" height=\"500px\" />\r\n          </Stack>\r\n          <Stack paddingLeft=\"300\">\r\n            <Text fontSize={\"xl\"} color={\"white\"} paddingTop=\"100\">\r\n              {\" \"}\r\n              Admin Receipt\r\n            </Text>\r\n            <Image src=\"https://templates.invoicehome.com/receipt-template-us-band-blue-750px.png\" width=\"300px\" height=\"500px\" />\r\n          </Stack>\r\n        </Stack>\r\n      </Container>\r\n    </Box>\r\n*/"]},"metadata":{},"sourceType":"module"}