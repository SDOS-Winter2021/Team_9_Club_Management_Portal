{"ast":null,"code":"import _regeneratorRuntime from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\src\\\\form-page\\\\components\\\\Body.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, ReactNode, View } from \"react\";\nimport { Flex, Box, FormControl, FormLabel, Input, Checkbox, Stack, Link, Button, Heading, Text, useColorModeValue, Textarea } from \"@chakra-ui/react\";\nimport eventOut from \"./eventOut\";\nexport default function Body() {\n  _s();\n\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      name = _React$useState2[0],\n      setname = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      datetime = _React$useState4[0],\n      setdatetime = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      location = _React$useState6[0],\n      setlocation = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      description = _React$useState8[0],\n      setdescription = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      prereq = _React$useState10[0],\n      setprereq = _React$useState10[1];\n\n  var _React$useState11 = React.useState(\"\"),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      prizemoney = _React$useState12[0],\n      setprizemoney = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      addinfo = _React$useState14[0],\n      setaddinfo = _React$useState14[1];\n\n  var _React$useState15 = React.useState([]),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      poster = _React$useState16[0],\n      setposter = _React$useState16[1];\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data, event_info, eResponse;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = {\n                name: name,\n                date_time: datetime,\n                location: location,\n                description: description,\n                approved: \"False\",\n                club_name: \"Peeyush's club\"\n              };\n              event_info = new FormData();\n              data = JSON.stringify(data); // event_info.append('Name', name);\n              // event_info.append('Date-Time', datetime);\n              // event_info.append('Location', location);\n              // event_info.append('Description', description);\n              // event_info.append('Pre-Requisites', prereq);\n              // event_info.append('Prize Money', prizemoney);\n              // event_info.append('Additional Information', addinfo);\n              //if (poster !== \"\") {\n              //event_info.append(\"poster\", poster);\n              //}\n\n              event_info.append(\"request\", data);\n              console.log(name);\n              _context.next = 7;\n              return eventOut(event_info);\n\n            case 7:\n              eResponse = _context.sent;\n              console.log(eResponse);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(Flex, {\n    minH: \"100vh\",\n    align: \"center\",\n    justify: \"center\",\n    bg: useColorModeValue(\"gray.50\", \"gray.800\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 8,\n    mx: \"auto\",\n    maxW: \"lg\",\n    py: 12,\n    px: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    fontSize: \"4xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Event Proposal Form\"), /*#__PURE__*/React.createElement(Text, {\n    fontSize: \"lg\",\n    color: \"gray.600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Add New Event\")), /*#__PURE__*/React.createElement(Box, {\n    rounded: \"lg\",\n    bg: useColorModeValue(\"white\", \"gray.700\"),\n    boxShadow: \"lg\",\n    p: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Stack, {\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: name,\n    onChange: function onChange(e) {\n      return setname(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    id: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Date-Time\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"datetime-local\",\n    value: datetime,\n    onChange: function onChange(e) {\n      return setdatetime(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    id: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: location,\n    onChange: function onChange(e) {\n      return setlocation(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    id: \"description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Textarea, {\n    type: \"text\",\n    value: description,\n    onChange: function onChange(e) {\n      return setdescription(e.target.value);\n    },\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    id: \"Poster\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Poster/Image\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"file\",\n    onChange: function onChange(e) {\n      return setposter(e.target.files[0]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Stack, {\n    spacing: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    bg: \"blue.400\",\n    color: \"white\",\n    _hover: {\n      bg: \"blue.500\"\n    },\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Submit\"))))));\n}\n\n_s(Body, \"AMEa54i5QU4qZAsZZM5hX2uQcrc=\", false, function () {\n  return [useColorModeValue, useColorModeValue];\n});\n\n_c = Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["D:/Team_9_Club_Management_Portal/frontend/src/form-page/components/Body.js"],"names":["React","Component","ReactNode","View","Flex","Box","FormControl","FormLabel","Input","Checkbox","Stack","Link","Button","Heading","Text","useColorModeValue","Textarea","eventOut","Body","useState","name","setname","datetime","setdatetime","location","setlocation","description","setdescription","prereq","setprereq","prizemoney","setprizemoney","addinfo","setaddinfo","poster","setposter","handleSubmit","event","data","date_time","approved","club_name","event_info","FormData","JSON","stringify","append","console","log","eResponse","e","target","value","files","bg"],"mappings":"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","sourcesContent":["import React, { Component, ReactNode, View } from \"react\";\r\nimport {\r\n  Flex,\r\n  Box,\r\n  FormControl,\r\n  FormLabel,\r\n  Input,\r\n  Checkbox,\r\n  Stack,\r\n  Link,\r\n  Button,\r\n  Heading,\r\n  Text,\r\n  useColorModeValue,\r\n  Textarea,\r\n\r\n} from \"@chakra-ui/react\";\r\n\r\nimport eventOut from \"./eventOut\";\r\n\r\nexport default function Body() {\r\n  const [name, setname] = React.useState(\"\");\r\n  const [datetime, setdatetime] = React.useState(\"\");\r\n  const [location, setlocation] = React.useState(\"\");\r\n  const [description, setdescription] = React.useState(\"\");\r\n  const [prereq, setprereq] = React.useState(\"\");\r\n  const [prizemoney, setprizemoney] = React.useState(\"\");\r\n  const [addinfo, setaddinfo] = React.useState(\"\");\r\n  const [poster, setposter] = React.useState([]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    var data = {\r\n      name: name,\r\n      date_time: datetime,\r\n      location: location,\r\n      description: description,\r\n      approved: \"False\",\r\n      club_name: \"Peeyush's club\",\r\n    };\r\n    var event_info = new FormData();\r\n    data = JSON.stringify(data);\r\n    // event_info.append('Name', name);\r\n    // event_info.append('Date-Time', datetime);\r\n    // event_info.append('Location', location);\r\n    // event_info.append('Description', description);\r\n    // event_info.append('Pre-Requisites', prereq);\r\n    // event_info.append('Prize Money', prizemoney);\r\n    // event_info.append('Additional Information', addinfo);\r\n    //if (poster !== \"\") {\r\n    //event_info.append(\"poster\", poster);\r\n    //}\r\n    event_info.append(\"request\", data);\r\n\r\n    console.log(name);\r\n    let eResponse = await eventOut(event_info);\r\n    console.log(eResponse);\r\n  };\r\n\r\n  return (\r\n    <Flex\r\n      minH={\"100vh\"}\r\n      align={\"center\"}\r\n      justify={\"center\"}\r\n      bg={useColorModeValue(\"gray.50\", \"gray.800\")}\r\n    >\r\n      <Stack spacing={8} mx={\"auto\"} maxW={\"lg\"} py={12} px={6}>\r\n        <Stack align={\"center\"}>\r\n          <Heading fontSize={\"4xl\"}>Event Proposal Form</Heading>\r\n          <Text fontSize={\"lg\"} color={\"gray.600\"}>\r\n            Add New Event\r\n          </Text>\r\n        </Stack>\r\n        <Box\r\n          rounded={\"lg\"}\r\n          bg={useColorModeValue(\"white\", \"gray.700\")}\r\n          boxShadow={\"lg\"}\r\n          p={8}\r\n        >\r\n          <Stack spacing={4}>\r\n            <FormControl id=\"name\">\r\n              <FormLabel>Name</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                value={name}\r\n                onChange={(e) => setname(e.target.value)}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"date\">\r\n              <FormLabel>Date-Time</FormLabel>\r\n              <Input\r\n                type=\"datetime-local\"\r\n                value={datetime}\r\n                onChange={(e) => setdatetime(e.target.value)}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"location\">\r\n              <FormLabel>Location</FormLabel>\r\n              <Input\r\n                type=\"text\"\r\n                value={location}\r\n                onChange={(e) => setlocation(e.target.value)}\r\n                required\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"description\">\r\n              <FormLabel>Description</FormLabel>\r\n              <Textarea\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setdescription(e.target.value)}\r\n                \r\n                required\r\n              />\r\n            </FormControl>\r\n            <FormControl id=\"Poster\">\r\n              <FormLabel>Poster/Image</FormLabel>\r\n              <Input\r\n                type=\"file\"\r\n                onChange={(e) => setposter(e.target.files[0])}\r\n              />\r\n            </FormControl>\r\n            <Stack spacing={10}>\r\n              <Button\r\n                bg={\"blue.400\"}\r\n                color={\"white\"}\r\n                _hover={{ bg: \"blue.500\" }}\r\n                onClick={handleSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Stack>\r\n          </Stack>\r\n        </Box>\r\n      </Stack>\r\n    </Flex>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}