{"ast":null,"code":"// Number assertions\nexport function isNumber(value) {\n  return typeof value === \"number\";\n}\nexport var isNotNumber = function isNotNumber(value) {\n  return typeof value !== \"number\" || Number.isNaN(value) || !Number.isFinite(value);\n};\nexport function isNumeric(value) {\n  return value != null && value - parseFloat(value) + 1 >= 0;\n} // Array assertions\n\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport var isEmptyArray = function isEmptyArray(value) {\n  return isArray(value) && value.length === 0;\n}; // Function assertions\n\nexport function isFunction(value) {\n  return typeof value === \"function\";\n} // Generic assertions\n\nexport var isDefined = function isDefined(value) {\n  return typeof value !== \"undefined\" && value !== undefined;\n};\nexport var isUndefined = function isUndefined(value) {\n  return typeof value === \"undefined\" || value === undefined;\n}; // Object assertions\n\nexport var isObject = function isObject(value) {\n  var type = typeof value;\n  return value != null && (type === \"object\" || type === \"function\") && !isArray(value);\n};\nexport var isEmptyObject = function isEmptyObject(value) {\n  return isObject(value) && Object.keys(value).length === 0;\n};\nexport function isNotEmptyObject(value) {\n  return value && !isEmptyObject(value);\n}\nexport var isNull = function isNull(value) {\n  return value == null;\n}; // String assertions\n\nexport function isString(value) {\n  return Object.prototype.toString.call(value) === \"[object String]\";\n}\nexport function isCssVar(value) {\n  return /^var\\(--.+\\)$/.test(value);\n} // Event assertions\n\nexport function isInputEvent(value) {\n  return value && isObject(value) && isObject(value.target);\n} // Empty assertions\n\nexport var isEmpty = function isEmpty(value) {\n  if (isArray(value)) return isEmptyArray(value);\n  if (isObject(value)) return isEmptyObject(value);\n  if (value == null || value === \"\") return true;\n  return false;\n}; // eslint-disable-next-line @typescript-eslint/naming-convention\n\nexport var __DEV__ = process.env.NODE_ENV !== \"production\";\nexport var isRefObject = function isRefObject(val) {\n  return \"current\" in val;\n};","map":null,"metadata":{},"sourceType":"module"}