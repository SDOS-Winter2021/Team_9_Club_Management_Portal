{"ast":null,"code":"import { createDomVisualElement } from './create-dom-visual-element.js';\nimport { createUseRender } from './use-render.js';\nimport { createMotionComponent } from '../../motion/index.js';\nimport { Drag } from '../../motion/features/drag.js';\nimport { Gestures } from '../../motion/features/gestures.js';\nimport { Exit } from '../../motion/features/exit.js';\nimport { Animation } from '../../motion/features/animation.js';\nimport { AnimateLayout } from '../../motion/features/layout/Animate.js';\nimport { MeasureLayout } from '../../motion/features/layout/Measure.js';\nimport { createMotionProxy } from './motion-proxy.js';\nvar allMotionFeatures = [MeasureLayout, Animation, Drag, Gestures, Exit, AnimateLayout];\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\n\nvar motion = /*@__PURE__*/createMotionProxy(allMotionFeatures);\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\n\nfunction createDomMotionComponent(key) {\n  var config = {\n    createVisualElement: createDomVisualElement(key),\n    useRender: createUseRender(key, false),\n    defaultFeatures: allMotionFeatures\n  };\n  return createMotionComponent(config);\n}\n\nexport { createDomMotionComponent, motion };","map":null,"metadata":{},"sourceType":"module"}