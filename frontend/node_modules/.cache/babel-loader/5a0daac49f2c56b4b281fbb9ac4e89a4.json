{"ast":null,"code":"import _regeneratorRuntime from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\src\\\\events-page\\\\App.js\";\nimport React, { Component } from \"react\";\nimport { Box, Heading, Container, Text, Button, Stack, Icon, useColorModeValue, createIcon, ThemeProvider, CSSReset, theme } from \"@chakra-ui/react\";\nimport Body from \"./components/Body\";\nimport Header from \"./components/Header\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nvar Events_Page = /*#__PURE__*/function (_React$Component) {\n  var _s = $RefreshSig$();\n\n  _inherits(Events_Page, _React$Component);\n\n  var _super = _createSuper(Events_Page);\n\n  function Events_Page() {\n    _classCallCheck(this, Events_Page);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Events_Page, [{\n    key: \"componentDidMount\",\n    value: _s(function componentDidMount() {\n      _s();\n\n      var id = useParams().id;\n\n      var _useState = useState([]),\n          _useState2 = _slicedToArray(_useState, 2),\n          eventInfo = _useState2[0],\n          setEventInfo = _useState2[1]; // transfers sessionStorage from one tab to another\n\n\n      var sessionStorage_transfer = function sessionStorage_transfer(event) {\n        if (!event) {\n          event = window.event;\n        } // ie suq\n\n\n        if (!event.newValue) return; // do nothing if no value to work with\n\n        if (event.key == 'getSessionStorage') {\n          // another tab asked for the sessionStorage -> send it\n          localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage)); // the other tab should now have it, so we're done with it.\n\n          localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.\n        } else if (event.key == 'sessionStorage' && !sessionStorage.length) {\n          // another tab sent data <- get it\n          var data = JSON.parse(event.newValue);\n\n          for (var key in data) {\n            sessionStorage.setItem(key, data[key]);\n          }\n        }\n      }; // listen for changes to localStorage\n\n\n      if (window.addEventListener) {\n        window.addEventListener(\"storage\", sessionStorage_transfer, false);\n      } else {\n        window.attachEvent(\"onstorage\", sessionStorage_transfer);\n      }\n\n      ; // Ask other tabs for session storage (this is ONLY to trigger event)\n\n      if (!sessionStorage.length) {\n        localStorage.setItem('getSessionStorage', 'foobar');\n        localStorage.removeItem('getSessionStorage', 'foobar');\n      }\n\n      ;\n      getEventInfo(this.id);\n    }, \"81bvoUyC3jX73Bb6yGDGaxQEVLk=\", false, function () {\n      return [useParams];\n    })\n  }, {\n    key: \"getEventInfo\",\n    value: function () {\n      var _getEventInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(eventID) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"http://127.0.0.1:8000/api/clubs/\".concat(id)).then(function (data) {\n                  return setEventInfo(data.data);\n                });\n\n              case 2:\n                res = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getEventInfo(_x) {\n        return _getEventInfo.apply(this, arguments);\n      }\n\n      return getEventInfo;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(ThemeProvider, {\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(CSSReset, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Header, {\n        Info: general,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Body, {\n        Info_G: general,\n        Info_E: event,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }));\n    }\n  }]);\n\n  return Events_Page;\n}(React.Component);\n\nexport default Club_Page;","map":{"version":3,"sources":["D:/Team_9_Club_Management_Portal/frontend/src/events-page/App.js"],"names":["React","Component","Box","Heading","Container","Text","Button","Stack","Icon","useColorModeValue","createIcon","ThemeProvider","CSSReset","theme","Body","Header","useParams","useState","useEffect","axios","Events_Page","id","eventInfo","setEventInfo","sessionStorage_transfer","event","window","newValue","key","localStorage","setItem","JSON","stringify","sessionStorage","removeItem","length","data","parse","addEventListener","attachEvent","getEventInfo","eventID","get","then","res","general","Club_Page"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Box,\r\n  Heading,\r\n  Container,\r\n  Text,\r\n  Button,\r\n  Stack,\r\n  Icon,\r\n  useColorModeValue,\r\n  createIcon,\r\n  ThemeProvider,\r\n  CSSReset,\r\n  theme,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport Body from \"./components/Body\";\r\nimport Header from \"./components/Header\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Events_Page extends React.Component{\r\n  componentDidMount() {\r\n    var id = useParams().id;\r\n\r\n    const [eventInfo, setEventInfo] = useState([]);\r\n    // transfers sessionStorage from one tab to another\r\n    var sessionStorage_transfer = function(event) {\r\n      if(!event) { event = window.event; } // ie suq\r\n      if(!event.newValue) return;          // do nothing if no value to work with\r\n      if (event.key == 'getSessionStorage') {\r\n        // another tab asked for the sessionStorage -> send it\r\n        localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage));\r\n        // the other tab should now have it, so we're done with it.\r\n        localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.\r\n      } else if (event.key == 'sessionStorage' && !sessionStorage.length) {\r\n        // another tab sent data <- get it\r\n        var data = JSON.parse(event.newValue);\r\n        for (var key in data) {\r\n          sessionStorage.setItem(key, data[key]);\r\n        }\r\n      }\r\n    };\r\n\r\n    // listen for changes to localStorage\r\n    if(window.addEventListener) {\r\n      window.addEventListener(\"storage\", sessionStorage_transfer, false);\r\n    } else {\r\n      window.attachEvent(\"onstorage\", sessionStorage_transfer);\r\n    };\r\n\r\n    // Ask other tabs for session storage (this is ONLY to trigger event)\r\n    if (!sessionStorage.length) {\r\n      localStorage.setItem('getSessionStorage', 'foobar');\r\n      localStorage.removeItem('getSessionStorage', 'foobar');\r\n    };\r\n\r\n    getEventInfo(this.id);\r\n  }\r\n\r\n  async getEventInfo(eventID) {\r\n    let res = await axios\r\n      .get(`http://127.0.0.1:8000/api/clubs/${id}`)\r\n      .then((data) => setEventInfo(data.data));\r\n    }\r\n\r\n  render() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <CSSReset/>\r\n    <Header Info={general}></Header>\r\n    <Body Info_G={general} Info_E={event}></Body>\r\n  </ThemeProvider>\r\n  )\r\n  }\r\n}\r\n\r\nexport default Club_Page"]},"metadata":{},"sourceType":"module"}