{"ast":null,"code":"import _classCallCheck from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { render } from \"react-dom\";\nimport { ToastManager } from \"./toast-manager\";\nvar portalId = \"chakra-toast-portal\";\n\nvar Toaster =\n/**\n * Initialize the manager and mount it in the DOM\n * inside the portal node.\n *\n * @todo\n *\n * Update toast constructor to use `PortalManager`'s node or document.body.\n * Once done, we can remove the `zIndex` in `toast.manager.tsx`\n */\nfunction Toaster() {\n  var _this2 = this;\n\n  _classCallCheck(this, Toaster);\n\n  var _this = this;\n\n  _defineProperty(this, \"createToast\", void 0);\n\n  _defineProperty(this, \"removeAll\", void 0);\n\n  _defineProperty(this, \"closeToast\", void 0);\n\n  _defineProperty(this, \"updateToast\", void 0);\n\n  _defineProperty(this, \"isToastActive\", void 0);\n\n  _defineProperty(this, \"bindFunctions\", function (methods) {\n    _this2.createToast = methods.notify;\n    _this2.removeAll = methods.closeAll;\n    _this2.closeToast = methods.close;\n    _this2.updateToast = methods.update;\n    _this2.isToastActive = methods.isActive;\n  });\n\n  _defineProperty(this, \"notify\", function (message, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _this.createToast == null ? void 0 : _this.createToast(message, options);\n  });\n\n  _defineProperty(this, \"close\", function (id) {\n    var _this$closeToast;\n\n    (_this$closeToast = _this2.closeToast) == null ? void 0 : _this$closeToast.call(_this2, id);\n  });\n\n  _defineProperty(this, \"closeAll\", function (options) {\n    var _this$removeAll;\n\n    (_this$removeAll = _this2.removeAll) == null ? void 0 : _this$removeAll.call(_this2, options);\n  });\n\n  _defineProperty(this, \"update\", function (id, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this.updateToast == null ? void 0 : _this.updateToast(id, options);\n  });\n\n  _defineProperty(this, \"isActive\", function (id) {\n    var _this$isToastActive;\n\n    return (_this$isToastActive = _this2.isToastActive) == null ? void 0 : _this$isToastActive.call(_this2, id);\n  });\n\n  if (!isBrowser) return;\n  var portal;\n  var existingPortal = document.getElementById(portalId);\n\n  if (existingPortal) {\n    portal = existingPortal;\n  } else {\n    var _document$body;\n\n    var div = document.createElement(\"div\");\n    div.id = portalId;\n    (_document$body = document.body) == null ? void 0 : _document$body.appendChild(div);\n    portal = div;\n  }\n\n  render( /*#__PURE__*/React.createElement(ToastManager, {\n    notify: this.bindFunctions\n  }), portal);\n};\n\nexport var toast = new Toaster();","map":null,"metadata":{},"sourceType":"module"}