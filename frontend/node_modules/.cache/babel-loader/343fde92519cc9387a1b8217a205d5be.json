{"ast":null,"code":"import _slicedToArray from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeRefs } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { getArrowStyles, getBoxShadow, toTransformOrigin } from \"./popper.utils\";\nimport { usePopper as useBasePopper } from \"./react-popper\";\nexport function usePopper(props) {\n  var _popperJS$state$place, _popperJS$state;\n\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      enabled = _props.enabled,\n      _props$placement = _props.placement,\n      placement = _props$placement === void 0 ? \"bottom\" : _props$placement,\n      _props$preventOverflo = _props.preventOverflow,\n      preventOverflow = _props$preventOverflo === void 0 ? true : _props$preventOverflo,\n      _props$fixed = _props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$flip = _props.flip,\n      flip = _props$flip === void 0 ? true : _props$flip,\n      _props$arrowSize = _props.arrowSize,\n      arrowSize = _props$arrowSize === void 0 ? 8 : _props$arrowSize,\n      arrowShadowColor = _props.arrowShadowColor,\n      _props$gutter = _props.gutter,\n      gutter = _props$gutter === void 0 ? 8 : _props$gutter,\n      _props$arrowPadding = _props.arrowPadding,\n      arrowPadding = _props$arrowPadding === void 0 ? 4 : _props$arrowPadding,\n      offsetProp = _props.offset,\n      matchWidth = _props.matchWidth,\n      _props$modifiers = _props.modifiers,\n      modifiers = _props$modifiers === void 0 ? [] : _props$modifiers;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      referenceNode = _React$useState2[0],\n      setReferenceNode = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      popperNode = _React$useState4[0],\n      setPopperNode = _React$useState4[1];\n\n  var _React$useState5 = React.useState(null),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      arrowNode = _React$useState6[0],\n      setArrowNode = _React$useState6[1];\n  /**\n   * recommended via popper docs\n   * @see https://popper.js.org/react-popper/v2/faq/#why-i-get-render-loop-whenever-i-put-a-function-inside-the-popper-configuration\n   */\n\n\n  var customModifiers = React.useMemo(function () {\n    var offset = offsetProp != null ? offsetProp : [0, gutter];\n    return [// @see https://popper.js.org/docs/v2/modifiers/offset/\n    {\n      name: \"offset\",\n      options: {\n        offset: offset != null ? offset : [0, gutter]\n      },\n      phase: \"main\"\n    }, // @see https://popper.js.org/docs/v2/modifiers/prevent-overflow/\n    {\n      name: \"preventOverflow\",\n      enabled: !!preventOverflow,\n      phase: \"main\"\n    }, // @see https://popper.js.org/docs/v2/modifiers/arrow/\n    {\n      name: \"arrow\",\n      enabled: !!arrowNode,\n      options: {\n        element: arrowNode,\n        padding: arrowPadding\n      },\n      phase: \"main\"\n    }, // @see https://popper.js.org/docs/v2/modifiers/flip/\n    {\n      name: \"flip\",\n      enabled: flip,\n      options: {\n        padding: 8\n      },\n      phase: \"main\"\n    }, {\n      name: \"matchWidth\",\n      enabled: !!matchWidth,\n      phase: \"beforeWrite\",\n      requires: [\"computeStyles\"],\n      fn: function fn(_ref2) {\n        var state = _ref2.state;\n        state.styles.popper.width = state.rects.reference.width + \"px\";\n      },\n      effect: function effect(_ref3) {\n        var state = _ref3.state;\n        return function () {\n          var reference = state.elements.reference;\n          state.elements.popper.style.width = reference.offsetWidth + \"px\";\n        };\n      }\n    }, {\n      name: \"applyArrowHide\",\n      enabled: true,\n      phase: \"write\",\n      fn: function fn(_ref4) {\n        var state = _ref4.state;\n        var arrow = state.elements.arrow;\n\n        if (arrow) {\n          var _state$modifiersData$;\n\n          if (((_state$modifiersData$ = state.modifiersData.arrow) == null ? void 0 : _state$modifiersData$.centerOffset) !== 0) {\n            arrow.setAttribute(\"data-hide\", \"\");\n          } else {\n            arrow.removeAttribute(\"data-hide\");\n          }\n        }\n      }\n    }];\n  }, [arrowNode, arrowPadding, flip, preventOverflow, offsetProp, gutter, matchWidth]);\n  var popperJS = useBasePopper(referenceNode, popperNode, {\n    enabled: enabled,\n    placement: placement,\n    strategy: fixed ? \"fixed\" : \"absolute\",\n    modifiers: customModifiers.concat(modifiers)\n  });\n  /**\n   * Ensure the popper will be correctly positioned with an extra update\n   */\n\n  React.useEffect(function () {\n    popperJS.forceUpdate == null ? void 0 : popperJS.forceUpdate();\n  });\n  var finalPlacement = (_popperJS$state$place = (_popperJS$state = popperJS.state) == null ? void 0 : _popperJS$state.placement) != null ? _popperJS$state$place : placement;\n  var arrowStyles = getArrowStyles({\n    placement: finalPlacement,\n    popperArrowStyles: popperJS.styles.arrow,\n    arrowSize: arrowSize\n  });\n  var getReferenceProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(setReferenceNode, _ref)\n    });\n  }, []);\n  var getPopperProps = React.useCallback(function (props, _ref) {\n    var _popperJS$styles;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, popperJS.attributes.popper, {\n      ref: mergeRefs(setPopperNode, _ref),\n      style: _extends({}, props.style, (_popperJS$styles = popperJS.styles) == null ? void 0 : _popperJS$styles.popper)\n    });\n  }, [popperJS.attributes, popperJS.styles]);\n  var getArrowWrapperProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, popperJS.attributes.arrow, {\n      ref: mergeRefs(setArrowNode, _ref),\n      style: _extends({}, props.style, arrowStyles)\n    });\n  }, [popperJS.attributes, arrowStyles]);\n  var getArrowProps = React.useCallback(function (props, _ref) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (_ref === void 0) {\n      _ref = null;\n    }\n\n    return _extends({}, props, {\n      ref: _ref,\n      style: _extends({\n        boxShadow: getBoxShadow(finalPlacement, arrowShadowColor)\n      }, props.style, {\n        position: \"absolute\",\n        zIndex: -1,\n        width: \"100%\",\n        height: \"100%\",\n        transform: \"rotate(45deg)\"\n      })\n    });\n  }, [finalPlacement, arrowShadowColor]);\n  return {\n    transformOrigin: toTransformOrigin(finalPlacement),\n    getReferenceProps: getReferenceProps,\n    getPopperProps: getPopperProps,\n    getArrowWrapperProps: getArrowWrapperProps,\n    getArrowProps: getArrowProps,\n    state: popperJS.state,\n    forceUpdate: popperJS.forceUpdate,\n    update: popperJS.update,\n    placement: finalPlacement\n  };\n}","map":null,"metadata":{},"sourceType":"module"}