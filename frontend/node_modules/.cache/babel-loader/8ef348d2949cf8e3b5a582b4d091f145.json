{"ast":null,"code":"import _classCallCheck from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\src\\\\home-page\\\\components\\\\Events.js\";\nimport React, { useState } from \"react\";\nimport { ThemeProvider, CSSReset, theme, Box, Image, Badge, Text, Icon, Stack, Avatar, AvatarBadge, Alert, AlertIcon, AlertTitle, AlertDescription, FormLabel, Input, FormHelperText, FormErrorMessage, Grid, Switch, InputGroup, InputRightElement, Flex, Tag, Heading, Button, useColorModeValue, SimpleGrid, Stat, StatLabel, StatNumber, useColorMode } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { IoAlarmOutline } from 'react-icons/io5';\nimport { BsBuilding } from \"react-icons/bs\";\nimport history from \"../../history\";\n\nvar Events = /*#__PURE__*/function (_React$Component) {\n  _inherits(Events, _React$Component);\n\n  var _super = _createSuper(Events);\n\n  function Events() {\n    var _this;\n\n    _classCallCheck(this, Events);\n\n    _this = _super.call(this);\n    _this.state = {\n      events: []\n    };\n\n    _this.getEvents = function () {\n      console.log(\"Getting Events\");\n      axios.get(\"http://127.0.0.1:8000/api/clubs/unapproved\").then(function (data) {\n        return _this.setState({\n          events: data.data\n        });\n      });\n    };\n\n    _this.Redirect_Event = function (name) {\n      console.log(\"Sending you to Event Page ------------->\");\n      history.push(\"/event/\".concat(name));\n    };\n\n    var sessionStorage_transfer = function sessionStorage_transfer(event) {\n      if (!event) {\n        event = window.event;\n      } // ie suq\n\n\n      if (!event.newValue) return; // do nothing if no value to work with\n\n      if (event.key == 'getSessionStorage') {\n        // another tab asked for the sessionStorage -> send it\n        localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage)); // the other tab should now have it, so we're done with it.\n\n        localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.\n      } else if (event.key == 'sessionStorage' && !sessionStorage.length) {\n        // another tab sent data <- get it\n        var data = JSON.parse(event.newValue);\n\n        for (var key in data) {\n          sessionStorage.setItem(key, data[key]);\n        }\n      }\n    }; // listen for changes to localStorage\n\n\n    if (window.addEventListener) {\n      window.addEventListener(\"storage\", sessionStorage_transfer, false);\n    } else {\n      window.attachEvent(\"onstorage\", sessionStorage_transfer);\n    }\n\n    ; // Ask other tabs for session storage (this is ONLY to trigger event)\n\n    if (!sessionStorage.length) {\n      localStorage.setItem('getSessionStorage', 'foobar');\n      localStorage.removeItem('getSessionStorage', 'foobar');\n    }\n\n    ;\n    return _this;\n  }\n\n  _createClass(Events, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getEvents();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n        p: 10,\n        gap: 6,\n        templateColumns: \"repeat(auto-fit, minmax(350px, 1fr))\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, this.state.events.map(function (user, i) {\n        return /*#__PURE__*/React.createElement(Stat, {\n          px: {\n            base: 4,\n            sm: 6\n          },\n          py: \"5\",\n          bg: 'gray.300',\n          shadow: \"base\",\n          rounded: \"lg\",\n          key: _this2.state.events[i][\"club_name\"],\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(StatLabel, {\n          fontWeight: \"medium\",\n          isTruncated: true,\n          color: 'black',\n          fontSize: \"lg\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, _this2.state.events[i][\"club_name\"]), /*#__PURE__*/React.createElement(StatNumber, {\n          fontSize: \"3xl\",\n          fontWeight: \"medium\",\n          color: 'black',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.Redirect_Event(_this2.state.events[i][\"id\"]);\n          },\n          bg: \"white\",\n          fontSize: \"xl\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }\n        }, _this2.state.events[i][\"name\"])), /*#__PURE__*/React.createElement(Stack, {\n          direction: 'row',\n          align: 'center',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Flex, {\n          w: 8,\n          h: 8,\n          align: 'center',\n          justify: 'center',\n          rounded: 'full',\n          bg: \"gray.300\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          as: IoAlarmOutline,\n          color: \"black\",\n          w: 5,\n          h: 5,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Text, {\n          fontWeight: 600,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }, _this2.state.events[i][\"date_time\"]), /*#__PURE__*/React.createElement(Flex, {\n          w: 8,\n          h: 8,\n          align: 'center',\n          justify: 'center',\n          rounded: 'full',\n          bg: \"gray.300\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          as: BsBuilding,\n          color: \"black\",\n          w: 5,\n          h: 5,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }\n        })), /*#__PURE__*/React.createElement(Text, {\n          fontWeight: 600,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }, _this2.state.events[i][\"location\"])));\n      })));\n    }\n  }]);\n\n  return Events;\n}(React.Component);\n\nexport default Events;","map":{"version":3,"sources":["D:/Team_9_Club_Management_Portal/frontend/src/home-page/components/Events.js"],"names":["React","useState","ThemeProvider","CSSReset","theme","Box","Image","Badge","Text","Icon","Stack","Avatar","AvatarBadge","Alert","AlertIcon","AlertTitle","AlertDescription","FormLabel","Input","FormHelperText","FormErrorMessage","Grid","Switch","InputGroup","InputRightElement","Flex","Tag","Heading","Button","useColorModeValue","SimpleGrid","Stat","StatLabel","StatNumber","useColorMode","axios","IoAlarmOutline","BsBuilding","history","Events","state","events","getEvents","console","log","get","then","data","setState","Redirect_Event","name","push","sessionStorage_transfer","event","window","newValue","key","localStorage","setItem","JSON","stringify","sessionStorage","removeItem","length","parse","addEventListener","attachEvent","map","user","i","base","sm","Component"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  ThemeProvider,\r\n  CSSReset,\r\n  theme,\r\n  Box,\r\n  Image,\r\n  Badge,\r\n  Text,\r\n  Icon,\r\n  Stack,\r\n  Avatar,\r\n  AvatarBadge,\r\n  Alert,\r\n  AlertIcon,\r\n  AlertTitle,\r\n  AlertDescription,\r\n  FormLabel,\r\n  Input,\r\n  FormHelperText,\r\n  FormErrorMessage,\r\n  Grid,\r\n  Switch,\r\n  InputGroup,\r\n  InputRightElement,\r\n  Flex,\r\n  Tag,\r\n  Heading,\r\n  Button,\r\n  useColorModeValue,\r\n  SimpleGrid,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  useColorMode,\r\n} from \"@chakra-ui/react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  IoAlarmOutline,\r\n} from 'react-icons/io5';\r\nimport { BsBuilding } from \"react-icons/bs\";\r\nimport history from \"../../history\";\r\n\r\n\r\nclass Events extends React.Component {\r\n  constructor() {\r\n    super();\r\n    var sessionStorage_transfer = function(event) {\r\n      if(!event) { event = window.event; } // ie suq\r\n      if(!event.newValue) return;          // do nothing if no value to work with\r\n      if (event.key == 'getSessionStorage') {\r\n        // another tab asked for the sessionStorage -> send it\r\n        localStorage.setItem('sessionStorage', JSON.stringify(sessionStorage));\r\n        // the other tab should now have it, so we're done with it.\r\n        localStorage.removeItem('sessionStorage'); // <- could do short timeout as well.\r\n      } else if (event.key == 'sessionStorage' && !sessionStorage.length) {\r\n        // another tab sent data <- get it\r\n        var data = JSON.parse(event.newValue);\r\n        for (var key in data) {\r\n          sessionStorage.setItem(key, data[key]);\r\n        }\r\n      }\r\n    };\r\n\r\n    // listen for changes to localStorage\r\n    if(window.addEventListener) {\r\n      window.addEventListener(\"storage\", sessionStorage_transfer, false);\r\n    } else {\r\n      window.attachEvent(\"onstorage\", sessionStorage_transfer);\r\n    };\r\n\r\n    // Ask other tabs for session storage (this is ONLY to trigger event)\r\n    if (!sessionStorage.length) {\r\n      localStorage.setItem('getSessionStorage', 'foobar');\r\n      localStorage.removeItem('getSessionStorage', 'foobar');\r\n    };\r\n  }\r\n\r\n  state = {\r\n    events: [],\r\n  };\r\n  componentDidMount() {\r\n    this.getEvents();\r\n  }\r\n\r\n  getEvents = () => {\r\n    console.log(\"Getting Events\");\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/clubs/unapproved\")\r\n      .then((data) => this.setState({ events: data.data }));\r\n  };\r\n\r\n  Redirect_Event = (name) => {\r\n    console.log(\"Sending you to Event Page ------------->\");\r\n    history.push(`/event/${name}`);\r\n  };\r\n  \r\n  \r\n  render() {\r\n    return (\r\n      <>\r\n      <Grid p={10} gap={6} templateColumns=\"repeat(auto-fit, minmax(350px, 1fr))\">\r\n        {this.state.events.map((user, i) => (\r\n          <Stat px={{ base: 4, sm: 6 }} py=\"5\" bg={'gray.300'} shadow=\"base\" rounded=\"lg\" key={this.state.events[i][\"club_name\"]}>\r\n            <StatLabel fontWeight=\"medium\" isTruncated color={'black'} fontSize=\"lg\">\r\n              {this.state.events[i][\"club_name\"]}\r\n            </StatLabel>\r\n            <StatNumber fontSize=\"3xl\" fontWeight=\"medium\" color={'black'}>\r\n              <Button onClick={() => this.Redirect_Event(this.state.events[i][\"id\"])} bg=\"white\" fontSize=\"xl\">\r\n              {this.state.events[i][\"name\"]}\r\n              </Button>\r\n            </StatNumber>\r\n            <Stack direction={'row'} align={'center'}>\r\n              <Flex w={8} h={8} align={'center'} justify={'center'} rounded={'full'} bg={\"gray.300\"}> \r\n                <Icon as={IoAlarmOutline} color={\"black\"} w={5} h={5}/>\r\n              </Flex>\r\n              <Text fontWeight={600}>\r\n                {this.state.events[i][\"date_time\"]}\r\n              </Text>\r\n              <Flex w={8} h={8} align={'center'} justify={'center'} rounded={'full'} bg={\"gray.300\"}> \r\n                <Icon as={BsBuilding} color={\"black\"} w={5} h={5}/>\r\n              </Flex>\r\n              <Text fontWeight={600}>\r\n                {this.state.events[i][\"location\"]}\r\n              </Text>\r\n            </Stack>\r\n          </Stat>\r\n        ))}\r\n      </Grid>\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Events;"]},"metadata":{},"sourceType":"module"}