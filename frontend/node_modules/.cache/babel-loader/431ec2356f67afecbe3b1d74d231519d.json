{"ast":null,"code":"import _slicedToArray from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useSafeLayoutEffect, useForceUpdate } from \"@chakra-ui/hooks\";\nexport function useDescendant(props) {\n  var context = props.context,\n      element = props.element,\n      indexProp = props.index,\n      disabled = props.disabled,\n      focusable = props.focusable,\n      rest = _objectWithoutPropertiesLoose(props, [\"context\", \"element\", \"index\", \"disabled\", \"focusable\"]);\n\n  var forceUpdate = useForceUpdate();\n  var register = context.register,\n      unregister = context.unregister,\n      descendants = context.descendants;\n  useSafeLayoutEffect(function () {\n    if (!element) {\n      forceUpdate();\n    }\n    /**\n     * Don't register this descendant if it is disabled and not focusable\n     */\n\n\n    if (disabled && !focusable) return undefined;\n    /**\n     * else, register the descendant\n     */\n\n    register(_extends({\n      element: element,\n      disabled: disabled,\n      focusable: focusable\n    }, rest));\n    /**\n     * when it unmounts, unregister the descendant\n     */\n\n    return function () {\n      if (element) {\n        unregister(element);\n      }\n    }; // eslint-disable-next-line\n  }, [element, disabled, focusable].concat(_toConsumableArray(Object.values(rest))));\n  var index = indexProp != null ? indexProp : descendants.findIndex(function (descendant) {\n    return descendant.element === element;\n  });\n  return index;\n}\nexport function useDescendants() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      descendants = _useState2[0],\n      setDescendants = _useState2[1];\n\n  var register = useCallback(function (_ref) {\n    var element = _ref.element,\n        rest = _objectWithoutPropertiesLoose(_ref, [\"element\"]);\n\n    if (!element) return; // @ts-ignore\n\n    setDescendants(function (prevDescendants) {\n      if (prevDescendants.find(function (item) {\n        return item.element === element;\n      }) == null) {\n        var index = prevDescendants.findIndex(function (item) {\n          if (!item.element || !element) return false;\n          return Boolean(item.element.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_PRECEDING);\n        });\n\n        var newItem = _extends({\n          element: element\n        }, rest);\n\n        if (index === -1) {\n          return [].concat(_toConsumableArray(prevDescendants), [newItem]);\n        }\n\n        return [].concat(_toConsumableArray(prevDescendants.slice(0, index)), [newItem], _toConsumableArray(prevDescendants.slice(index)));\n      }\n\n      return prevDescendants;\n    });\n  }, []);\n  var unregister = useCallback(function (element) {\n    if (!element) return;\n    setDescendants(function (descendants) {\n      return descendants.filter(function (descendant) {\n        return element !== descendant.element;\n      });\n    });\n  }, []);\n  var context = useMemo(function () {\n    return {\n      descendants: descendants,\n      register: register,\n      unregister: unregister\n    };\n  }, [descendants, register, unregister]);\n  return context;\n}","map":{"version":3,"sources":["../../src/use-descendant.ts"],"names":["index","focusable","forceUpdate","useForceUpdate","descendants","useSafeLayoutEffect","disabled","register","element","unregister","Object","indexProp","descendant","useState","useCallback","rest","setDescendants","prevDescendants","item","Boolean","Node","newItem","context","useMemo"],"mappings":"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","sourcesContent":["import { useCallback, useMemo, useState } from \"react\"\nimport { useSafeLayoutEffect, useForceUpdate } from \"@chakra-ui/hooks\"\n\nexport type Descendant<T extends HTMLElement, P = {}> = P & {\n  element: T | null\n  index?: number\n  disabled?: boolean\n  focusable?: boolean\n}\n\nexport interface DescendantContext<T extends HTMLElement, P = {}> {\n  descendants: Descendant<T, P>[]\n  register: (descendant: Descendant<T, P>) => void\n  unregister: (element: T) => void\n}\n\nexport type UseDescendantProps<T extends HTMLElement, P> = {\n  context: DescendantContext<T, P>\n} & Descendant<T, P>\n\nexport function useDescendant<T extends HTMLElement, P>(\n  props: UseDescendantProps<T, P>,\n) {\n  const {\n    context,\n    element,\n    index: indexProp,\n    disabled,\n    focusable,\n    ...rest\n  } = props\n\n  const forceUpdate = useForceUpdate()\n  const { register, unregister, descendants } = context\n\n  useSafeLayoutEffect(() => {\n    if (!element) {\n      forceUpdate()\n    }\n\n    /**\n     * Don't register this descendant if it is disabled and not focusable\n     */\n    if (disabled && !focusable) return undefined\n\n    /**\n     * else, register the descendant\n     */\n    register({ element, disabled, focusable, ...rest } as any)\n\n    /**\n     * when it unmounts, unregister the descendant\n     */\n    return () => {\n      if (element) {\n        unregister(element)\n      }\n    }\n    // eslint-disable-next-line\n  }, [element, disabled, focusable, ...Object.values(rest)])\n\n  const index =\n    indexProp ??\n    descendants.findIndex((descendant) => descendant.element === element)\n\n  return index\n}\n\nexport function useDescendants<T extends HTMLElement, P>() {\n  const [descendants, setDescendants] = useState<Descendant<T, P>[]>([])\n\n  const register = useCallback(({ element, ...rest }: Descendant<T, P>) => {\n    if (!element) return\n\n    // @ts-ignore\n    setDescendants((prevDescendants) => {\n      if (prevDescendants.find((item) => item.element === element) == null) {\n        const index = prevDescendants.findIndex((item) => {\n          if (!item.element || !element) return false\n\n          return Boolean(\n            item.element.compareDocumentPosition(element) &\n              Node.DOCUMENT_POSITION_PRECEDING,\n          )\n        })\n\n        const newItem = { element, ...rest }\n\n        if (index === -1) {\n          return [...prevDescendants, newItem]\n        }\n        return [\n          ...prevDescendants.slice(0, index),\n          newItem,\n          ...prevDescendants.slice(index),\n        ]\n      }\n      return prevDescendants\n    })\n  }, [])\n\n  const unregister = useCallback((element: T) => {\n    if (!element) return\n    setDescendants((descendants) =>\n      descendants.filter((descendant) => element !== descendant.element),\n    )\n  }, [])\n\n  const context = useMemo(() => ({ descendants, register, unregister }), [\n    descendants,\n    register,\n    unregister,\n  ])\n\n  return context\n}\n"]},"metadata":{},"sourceType":"module"}