{"ast":null,"code":"import * as React from \"react\";\nimport { isBrowser } from \"@chakra-ui/utils\";\nimport { useCallbackRef } from \"./use-callback-ref\";\n/**\n * React hook to manage browser event listeners\n *\n * @param event the event name\n * @param handler the event handler function to execute\n * @param doc the dom environment to execute against (defaults to `document`)\n * @param options the event listener options\n */\n\nexport function useEventListener(event, handler, env, options) {\n  if (env === void 0) {\n    env = isBrowser ? document : null;\n  }\n\n  var fn = useCallbackRef(handler);\n  React.useEffect(function () {\n    if (!env) return undefined;\n\n    var listener = function listener(event) {\n      fn(event);\n    };\n\n    env.addEventListener(event, listener, options);\n    return function () {\n      env.removeEventListener(event, listener, options);\n    };\n  }, [event, env, options, fn]);\n  return function () {\n    var _env;\n\n    (_env = env) == null ? void 0 : _env.removeEventListener(event, fn, options);\n  };\n}","map":null,"metadata":{},"sourceType":"module"}