{"ast":null,"code":"import _slicedToArray from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { useUpdateEffect } from \"@chakra-ui/hooks\";\nimport { cx, warn, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { EASINGS } from \"./__utils\";\n\nvar hasHeightValue = function hasHeightValue(value) {\n  return value != null && parseInt(value.toString(), 10) > 0;\n};\n\nvar variants = {\n  exit: function exit(props) {\n    return _extends({}, props.animateOpacity && {\n      opacity: hasHeightValue(props.startingHeight) ? 1 : 0\n    }, {\n      height: props.startingHeight,\n      transition: {\n        height: {\n          duration: 0.2,\n          ease: EASINGS.ease\n        },\n        opacity: {\n          duration: 0.3,\n          ease: EASINGS.ease\n        }\n      }\n    });\n  },\n  enter: function enter(props) {\n    return _extends({}, props.animateOpacity && {\n      opacity: 1\n    }, {\n      height: props.endingHeight,\n      transition: {\n        height: {\n          duration: 0.3,\n          ease: EASINGS.ease\n        },\n        opacity: {\n          duration: 0.4,\n          ease: EASINGS.ease\n        }\n      }\n    });\n  }\n};\nexport var Collapse = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var isOpen = props.in,\n      unmountOnExit = props.unmountOnExit,\n      _props$animateOpacity = props.animateOpacity,\n      animateOpacity = _props$animateOpacity === void 0 ? true : _props$animateOpacity,\n      _props$startingHeight = props.startingHeight,\n      startingHeight = _props$startingHeight === void 0 ? 0 : _props$startingHeight,\n      _props$endingHeight = props.endingHeight,\n      endingHeight = _props$endingHeight === void 0 ? \"auto\" : _props$endingHeight,\n      style = props.style,\n      className = props.className,\n      _onAnimationComplete = props.onAnimationComplete,\n      rest = _objectWithoutPropertiesLoose(props, [\"in\", \"unmountOnExit\", \"animateOpacity\", \"startingHeight\", \"endingHeight\", \"style\", \"className\", \"onAnimationComplete\"]);\n\n  var fromZeroHeight = startingHeight === 0;\n\n  var _React$useState = React.useState(!!isOpen),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var getInitialHidden = function getInitialHidden() {\n    // If it is open by default, no need to apply `aria-hidden`\n    if (isOpen) return false; // If startingHeight > 0, then content is partially visible\n\n    if (hasHeightValue(startingHeight)) return false; // Else, the content is hidden\n\n    return true;\n  };\n\n  var _React$useState3 = React.useState(function () {\n    if (!fromZeroHeight) return \"block\";\n    var hidden = getInitialHidden();\n    return hidden ? \"none\" : \"block\";\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      display = _React$useState4[0],\n      setDisplay = _React$useState4[1];\n\n  useUpdateEffect(function () {\n    setDisplay(\"block\");\n    setOpen(!!isOpen);\n  }, [isOpen]);\n  /**\n   * Warn ðŸš¨: `startingHeight` and `unmountOnExit` are mutually exclusive\n   *\n   * If you specify a starting height, the collapsed needs to be mounted\n   * for the height to take effect.\n   */\n\n  if (startingHeight > 0 && unmountOnExit) {\n    warn(\"startingHeight and unmountOnExit are mutually exclusive. You can't use them together\");\n  }\n\n  var custom = {\n    startingHeight: startingHeight,\n    endingHeight: endingHeight,\n    animateOpacity: animateOpacity\n  };\n\n  var ownProps = _extends({\n    ref: ref,\n    // @future: set parameter as `definition` when we remove `framer-motion`\n    // v3 support\n    onAnimationComplete: function onAnimationComplete(definition) {\n      if (!open && fromZeroHeight) {\n        setDisplay(\"none\");\n      } // @future: remove `any` cast when we remove `framer-motion` v3 support\n\n\n      ;\n      _onAnimationComplete == null ? void 0 : _onAnimationComplete(definition);\n    },\n    className: cx(\"chakra-collapse\", className)\n  }, rest, {\n    variants: variants,\n    style: _extends({\n      overflow: \"hidden\"\n    }, style),\n    custom: custom\n  });\n\n  if (unmountOnExit) {\n    return /*#__PURE__*/React.createElement(AnimatePresence, {\n      initial: false,\n      custom: custom\n    }, isOpen && /*#__PURE__*/React.createElement(motion.div, _extends({}, ownProps, {\n      initial: \"exit\",\n      animate: \"enter\",\n      exit: \"exit\"\n    })));\n  }\n\n  return /*#__PURE__*/React.createElement(motion.div, _extends({}, ownProps, {\n    style: _extends({}, ownProps.style, {\n      display: display\n    }),\n    initial: false,\n    animate: open ? \"enter\" : \"exit\"\n  }));\n});\n\nif (__DEV__) {\n  Collapse.displayName = \"Collapse\";\n}","map":null,"metadata":{},"sourceType":"module"}