{"ast":null,"code":"import _toConsumableArray from \"D:/Team_9_Club_Management_Portal/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { mergeWith, objectKeys } from \"@chakra-ui/utils\";\nimport { background, border, color, flexbox, grid, layout, list, others, outline, position, shadow, space, transform, transition, typography } from \"./config\";\nimport { pseudoPropNames, pseudoSelectors } from \"./pseudos\";\nexport var systemProps = mergeWith({}, background, border, color, flexbox, layout, outline, grid, others, position, shadow, space, typography, transform, list, transition);\nvar layoutSystem = mergeWith({}, space, layout, flexbox, grid, position);\nexport var layoutPropNames = objectKeys(layoutSystem);\nexport var propNames = [].concat(_toConsumableArray(objectKeys(systemProps)), _toConsumableArray(pseudoPropNames));\n\nvar styleProps = _extends({}, systemProps, pseudoSelectors);\n\nexport var isStyleProp = function isStyleProp(prop) {\n  return prop in styleProps;\n};","map":{"version":3,"sources":["../../src/system.ts"],"names":["systemProps","mergeWith","layoutSystem","layoutPropNames","objectKeys","propNames","styleProps","isStyleProp","prop"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAA,SAAA,EAAA,UAAA,QAAA,kBAAA;AACA,SAAA,UAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,SAAA,EAAA,UAAA,EAAA,UAAA,QAAA,UAAA;AAiBA,SAAA,eAAA,EAAA,eAAA,QAAA,WAAA;AAEA,OAAO,IAAMA,WAAW,GAAGC,SAAS,CAAA,EAAA,EAAA,UAAA,EAAA,MAAA,EAAA,KAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,KAAA,EAAA,UAAA,EAAA,SAAA,EAAA,IAAA,EAA7B,UAA6B,CAA7B;AAmBP,IAAMC,YAAY,GAAGD,SAAS,CAAA,EAAA,EAAA,KAAA,EAAA,MAAA,EAAA,OAAA,EAAA,IAAA,EAA9B,QAA8B,CAA9B;AACA,OAAO,IAAME,eAAe,GAAGC,UAAU,CAAlC,YAAkC,CAAlC;AAEP,OAAO,IAAMC,SAAS,gCAAOD,UAAU,CAAd,WAAc,CAAjB,sBAAf,eAAe,EAAf;;AAEP,IAAME,UAAU,GAAA,QAAA,CAAA,EAAA,EAAA,WAAA,EAAhB,eAAgB,CAAhB;;AAEA,OAAO,IAAMC,WAAW,GAAIC,SAAfD,WAAeC,CAAAA,IAAD;AAAA,SAAkBA,IAAI,IAA1C,UAAoB;AAAA,CAApB","sourcesContent":["import { mergeWith, objectKeys } from \"@chakra-ui/utils\"\nimport {\n  background,\n  border,\n  color,\n  flexbox,\n  grid,\n  layout,\n  list,\n  others,\n  outline,\n  position,\n  shadow,\n  space,\n  transform,\n  transition,\n  typography,\n} from \"./config\"\nimport { pseudoPropNames, pseudoSelectors } from \"./pseudos\"\n\nexport const systemProps = mergeWith(\n  {},\n  background,\n  border,\n  color,\n  flexbox,\n  layout,\n  outline,\n  grid,\n  others,\n  position,\n  shadow,\n  space,\n  typography,\n  transform,\n  list,\n  transition,\n)\n\nconst layoutSystem = mergeWith({}, space, layout, flexbox, grid, position)\nexport const layoutPropNames = objectKeys(layoutSystem)\n\nexport const propNames = [...objectKeys(systemProps), ...pseudoPropNames]\n\nconst styleProps = { ...systemProps, ...pseudoSelectors }\n\nexport const isStyleProp = (prop: string) => prop in styleProps\n"]},"metadata":{},"sourceType":"module"}