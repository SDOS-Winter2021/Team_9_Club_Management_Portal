{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, useStyleConfig } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * Layout component used to visually separate content in a list or group.\n * It display a thin horizontal or vertical line, and renders a `hr` tag.\n *\n * @see Docs https://chakra-ui.com/docs/data-display/divider\n */\n\nexport var Divider = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useStyleConfig = useStyleConfig(\"Divider\", props),\n      borderLeftWidth = _useStyleConfig.borderLeftWidth,\n      borderBottomWidth = _useStyleConfig.borderBottomWidth,\n      borderTopWidth = _useStyleConfig.borderTopWidth,\n      borderRightWidth = _useStyleConfig.borderRightWidth,\n      borderWidth = _useStyleConfig.borderWidth,\n      borderStyle = _useStyleConfig.borderStyle,\n      borderColor = _useStyleConfig.borderColor,\n      styles = _objectWithoutPropertiesLoose(_useStyleConfig, [\"borderLeftWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderRightWidth\", \"borderWidth\", \"borderStyle\", \"borderColor\"]);\n\n  var _omitThemingProps = omitThemingProps(props),\n      className = _omitThemingProps.className,\n      _omitThemingProps$ori = _omitThemingProps.orientation,\n      orientation = _omitThemingProps$ori === void 0 ? \"horizontal\" : _omitThemingProps$ori,\n      __css = _omitThemingProps.__css,\n      rest = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\", \"orientation\", \"__css\"]);\n\n  var dividerStyles = {\n    vertical: {\n      borderLeftWidth: borderLeftWidth || borderRightWidth || borderWidth || \"1px\",\n      height: \"100%\"\n    },\n    horizontal: {\n      borderBottomWidth: borderBottomWidth || borderTopWidth || borderWidth || \"1px\",\n      width: \"100%\"\n    }\n  };\n  return /*#__PURE__*/React.createElement(chakra.hr, _extends({\n    ref: ref,\n    role: \"separator\",\n    \"aria-orientation\": orientation\n  }, rest, {\n    __css: _extends({}, styles, {\n      border: \"0\",\n      borderColor: borderColor,\n      borderStyle: borderStyle\n    }, dividerStyles[orientation], __css),\n    className: cx(\"chakra-divider\", className)\n  }));\n});\n\nif (__DEV__) {\n  Divider.displayName = \"Divider\";\n}","map":null,"metadata":{},"sourceType":"module"}