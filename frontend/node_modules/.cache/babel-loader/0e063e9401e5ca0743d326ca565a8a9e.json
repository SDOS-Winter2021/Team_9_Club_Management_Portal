{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport * as React from \"react\";\nimport { Modal, ModalContent } from \"./modal\";\nexport function AlertDialog(props) {\n  var leastDestructiveRef = props.leastDestructiveRef,\n      rest = _objectWithoutPropertiesLoose(props, [\"leastDestructiveRef\"]);\n\n  return /*#__PURE__*/React.createElement(Modal, _extends({}, rest, {\n    initialFocusRef: leastDestructiveRef\n  }));\n}\nexport var AlertDialogContent = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(ModalContent, _extends({\n    ref: ref,\n    role: \"alertdialog\"\n  }, props));\n});\nexport { ModalBody as AlertDialogBody, ModalCloseButton as AlertDialogCloseButton, ModalFooter as AlertDialogFooter, ModalHeader as AlertDialogHeader, ModalOverlay as AlertDialogOverlay } from \"./modal\";","map":null,"metadata":{},"sourceType":"module"}