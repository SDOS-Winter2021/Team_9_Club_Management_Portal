{"ast":null,"code":"import _toConsumableArray from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\Team_9_Club_Management_Portal\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { objectKeys } from \"@chakra-ui/utils\";\nimport { AnimatePresence } from \"framer-motion\";\nimport * as React from \"react\";\nimport { Toast } from \"./toast\";\nimport { findToast, getToastPosition } from \"./toast.utils\";\n/**\n * Manages the creation, and removal of toasts\n * across all corners (\"top\", \"bottom\", etc.)\n */\n\nexport var ToastManager = /*#__PURE__*/function (_React$Component) {\n  _inherits(ToastManager, _React$Component);\n\n  var _super = _createSuper(ToastManager);\n\n  /**\n   * Static id counter to create unique ids\n   * for each toast\n   */\n\n  /**\n   * State to track all the toast across all positions\n   */\n  function ToastManager(props) {\n    var _this2;\n\n    _classCallCheck(this, ToastManager);\n\n    var _this;\n\n    _this2 = _super.call(this, props);\n    _this = _assertThisInitialized(_this2);\n\n    _defineProperty(_assertThisInitialized(_this2), \"state\", {\n      top: [],\n      \"top-left\": [],\n      \"top-right\": [],\n      \"bottom-left\": [],\n      bottom: [],\n      \"bottom-right\": []\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"notify\", function (message, options) {\n      var toast = _this2.createToast(message, options);\n\n      var position = toast.position,\n          id = toast.id;\n\n      _this2.setState(function (prevToasts) {\n        var isTop = position.includes(\"top\");\n        /**\n         * - If the toast is positioned at the top edges, the\n         * recent toast stacks on top of the other toasts.\n         *\n         * - If the toast is positioned at the bottom edges, the recent\n         * toast stacks below the other toasts.\n         */\n\n        var toasts = isTop ? [toast].concat(_toConsumableArray(prevToasts[position])) : [].concat(_toConsumableArray(prevToasts[position]), [toast]);\n        return _extends({}, prevToasts, {\n          [position]: toasts\n        });\n      });\n\n      return id;\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"updateToast\", function (id, options) {\n      _this2.setState(function (prevState) {\n        var nextState = _extends({}, prevState);\n\n        var _findToast = findToast(nextState, id),\n            position = _findToast.position,\n            index = _findToast.index;\n\n        if (position && index !== -1) {\n          nextState[position][index] = _extends({}, nextState[position][index], options);\n        }\n\n        return nextState;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeAll\", function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          positions = _ref.positions; // only one setState here for perf reasons\n      // instead of spamming this.closeToast\n\n\n      _this.setState(function (prev) {\n        var allPositions = [\"bottom\", \"bottom-right\", \"bottom-left\", \"top\", \"top-left\", \"top-right\"];\n        var positionsToClose = positions != null ? positions : allPositions;\n        return positionsToClose.reduce(function (acc, position) {\n          acc[position] = prev[position].map(function (toast) {\n            return _extends({}, toast, {\n              requestClose: true\n            });\n          });\n          return acc;\n        }, {});\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"createToast\", function (message, options) {\n      var _options$id, _options$position;\n\n      ToastManager.counter += 1;\n      var id = (_options$id = options.id) != null ? _options$id : ToastManager.counter;\n      var position = (_options$position = options.position) != null ? _options$position : \"top\";\n      return {\n        id: id,\n        message: message,\n        position: position,\n        duration: options.duration,\n        onCloseComplete: options.onCloseComplete,\n        onRequestRemove: function onRequestRemove() {\n          return _this2.removeToast(String(id), position);\n        },\n        status: options.status,\n        requestClose: false\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"closeToast\", function (id) {\n      _this2.setState(function (prevState) {\n        var position = getToastPosition(prevState, id);\n        if (!position) return prevState;\n        return _extends({}, prevState, {\n          [position]: prevState[position].map(function (toast) {\n            // id may be string or number\n            // eslint-disable-next-line eqeqeq\n            if (toast.id == id) {\n              return _extends({}, toast, {\n                requestClose: true\n              });\n            }\n\n            return toast;\n          })\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"removeToast\", function (id, position) {\n      _this2.setState(function (prevState) {\n        return _extends({}, prevState, {\n          // id may be string or number\n          // eslint-disable-next-line eqeqeq\n          [position]: prevState[position].filter(function (toast) {\n            return toast.id != id;\n          })\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"isVisible\", function (id) {\n      var _findToast2 = findToast(_this2.state, id),\n          position = _findToast2.position;\n\n      return Boolean(position);\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"getStyle\", function (position) {\n      var isTopOrBottom = position === \"top\" || position === \"bottom\";\n      var margin = isTopOrBottom ? \"0 auto\" : undefined;\n      var top = position.includes(\"top\") ? 0 : undefined;\n      var bottom = position.includes(\"bottom\") ? 0 : undefined;\n      var right = !position.includes(\"left\") ? 0 : undefined;\n      var left = !position.includes(\"right\") ? 0 : undefined;\n      return {\n        position: \"fixed\",\n        zIndex: 5500,\n        pointerEvents: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        margin: margin,\n        top: top,\n        bottom: bottom,\n        right: right,\n        left: left\n      };\n    });\n\n    var methods = {\n      notify: _this2.notify,\n      closeAll: _this2.closeAll,\n      close: _this2.closeToast,\n      update: _this2.updateToast,\n      isActive: _this2.isVisible\n    };\n    props.notify(methods);\n    return _this2;\n  }\n  /**\n   * Function to actually create a toast and add it\n   * to state at the specified position\n   */\n\n\n  _createClass(ToastManager, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return objectKeys(this.state).map(function (position) {\n        var toasts = _this3.state[position];\n        return /*#__PURE__*/React.createElement(\"ul\", {\n          key: position,\n          id: \"chakra-toast-manager-\" + position,\n          style: _this3.getStyle(position)\n        }, /*#__PURE__*/React.createElement(AnimatePresence, {\n          initial: false\n        }, toasts.map(function (toast) {\n          return /*#__PURE__*/React.createElement(Toast, _extends({\n            key: toast.id\n          }, toast));\n        })));\n      });\n    }\n  }]);\n\n  return ToastManager;\n}(React.Component);\n\n_defineProperty(ToastManager, \"counter\", 0);","map":null,"metadata":{},"sourceType":"module"}