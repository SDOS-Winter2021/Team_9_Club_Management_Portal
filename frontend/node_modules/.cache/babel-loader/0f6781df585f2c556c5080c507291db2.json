{"ast":null,"code":"// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\nimport { getOwnerDocument } from \"./dom\";\nexport var hasDisplayNone = function hasDisplayNone(element) {\n  return window.getComputedStyle(element).display === \"none\";\n};\nexport var hasTabIndex = function hasTabIndex(element) {\n  return element.hasAttribute(\"tabindex\");\n};\nexport var hasNegativeTabIndex = function hasNegativeTabIndex(element) {\n  return hasTabIndex(element) && element.tabIndex === -1;\n};\nexport function isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nexport function isInputElement(element) {\n  return isHTMLElement(element) && element.tagName.toLowerCase() === \"input\" && \"select\" in element;\n}\nexport function isActiveElement(element) {\n  var doc = element instanceof HTMLElement ? getOwnerDocument(element) : document;\n  return doc.activeElement === element;\n}\nexport function hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nexport function isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\nexport function isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nexport function isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nexport function isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var localName = element.localName;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: function a() {\n      return element.hasAttribute(\"href\");\n    },\n    audio: function audio() {\n      return element.hasAttribute(\"controls\");\n    },\n    video: function video() {\n      return element.hasAttribute(\"controls\");\n    }\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nexport function isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}","map":null,"metadata":{},"sourceType":"module"}